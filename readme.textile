h1. Dependency Injection in Lift

h2. The 'Lift' way

http://groups.google.com/group/liftweb/browse_thread/thread/49abb968212f2743/02b4506fc58c946e

h2. Spring, Aspects, @Configurable and Compile Time Weaving using maven

h3. aspectj-maven-plugin: FAILED

http://www.chrissearle.org/node/285 => does not work since it is based on java file
  and not on classes.

I didn't find in aspectj-maven-plugin source code the way to give classes instead of java source. The only closest
behavior is through module dependency jar processing...

h3. aspect's main tools: SUCCESS

Another solution is to use the aspectj's main classes to process the generated classes.

h4. "can't determine annotations of missing type javax.persistence.Entity" issue:

http://forum.springsource.org/showthread.php?p=287675
added:
   <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>

h1. GIT

* git status
* git add src/main/...
* git commit
* git push


h1. Protocol buffer

* apt-get install protobuf-compiler
* svn co http://protobuf.googlecode.com/svn/branches/maven-plugin/tools/maven-plugin
** cd maven-plugin
** modify the pom.xml: add java 1.5 build + remove parent dependency
** mvn install

